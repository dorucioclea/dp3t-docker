info:
    build:
        artifact: '@project.artifactId@'
        description: '@project.description@'
        name: '@project.name@'
        version: '@project.version@'
logging:
  level:
    ch:
      admin:
        bit:
          jeap: DEBUG
        bag: DEBUG
    io:
      swagger:
        models:
          parameters:
            AbstractSerializableParameter: ERROR
    org:
      hibernate: ERROR
      springframework:
        security:
          authentication:
            event:
              LoggerListener: ERROR
          oauth2:
            server:
              resource:
                web:
                  BearerTokenAuthenticationFilter: INFO
        web:
          servlet:
            resource:
              ResourceHttpRequestHandler: INFO
          filter:
            CommonsRequestLoggingFilter: INFO
    springfox:
      documentation:
        spring:
          web:
            readers:
              operation:
                CachingOperationNameGenerator: ERROR
  pattern:
    level: '[%X{correlationId}] %5p'
  config: classpath:logback-spring.xml
  file:
    name: log.log
server:
    port: 8113
    servlet:
        context-path: /
spring:
    application:
        name: ha-authcodegeneration
    profiles:
        active: jwt
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.postgresql.Driver
        url: ${DB_URL}
        username: ${DB_USER}
        password: ${DB_PASSWORD}
        hikari:
            maximum-pool-size: 10
            pool-name: hikari-cp-${spring.application.name}
    jpa:
        hibernate:
            ddl-auto: validate
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQL10Dialect
        show-sql: false
        open-in-view: false
    flyway:
        enabled: true
        clean-on-validation-error: false
        locations: classpath:db/migration/common

    messages:
        basename: mail-messages,validation-messages
        encoding: UTF-8
        fallback-to-system-locale: false

    servlet:
        multipart:
            max-file-size: 10MB
            max-request-size: 10MB
    session:
        store-type: none
    data:
        rest:
            base-path: /
            max-page-size: 100
            default-page-size: 20
    main:
        banner-mode: off

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    jolokia:
      enabled: true
    health:
      show-details: always
    flyway:
      enabled: true

authcodegeneration:
    rest:
        connectTimeoutSeconds: 5
        readTimeoutSeconds: 5
    service:
        callCountLimit: 1
        codeExpirationDelay: 1440
        deletionCron: "0 30 1 * * ?"
        onsetSubtractionDays: 3
        requestTime: 500
    monitor:
        prometheus:
            user: "prometheus"
            password: "{noop}secret"
            secure: false
    jwt:
        issuer: "https://localhost"
        token-validity: 300000
        privateKey: ${JWTTOKEN_PRIVATE}
jeap:
  security:
    oauth2:
      resourceserver:
        authorization-server:
          issuer: "https://localhost/auth/realms/bag-pts"
          jwk-set-uri: "http://keycloak:8080/auth/realms/bag-pts/protocol/openid-connect/certs"

ha-authcode-generation-service:
    allowed-origin: "https://localhost"

