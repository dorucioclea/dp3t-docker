limit_req_status 429;
limit_req_zone $binary_remote_addr zone=frontend:10m rate=4r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=1r/s;

# add nodelay to limit_req directives to send a 429 response instead of waiting
# for free slots

server {
    listen      80;
    server_name localhost;

    location ^~ (.well-known) {
        root /app;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen          443 ssl http2;
    server_name     localhost;
    root            /app;

    location ~ ^/v1/(onset|authcode) {
        limit_req zone=api burst=2;
        proxy_pass  http://authcodews:8113;
        include     includes/proxy-headers.ngx;
    }

    location ~ ^/v1/ {
        limit_req zone=api burst=2;
        proxy_pass  http://backendws:8080;
        include     includes/proxy-headers.ngx;
    }

    location ~ ^/auth/realms/bag-pts/ {
        limit_req zone=api burst=2;
        proxy_pass  http://keycloak:8080;
        include     includes/proxy-headers.ngx;
    }

    location ~ ^/auth/resources/ {
        limit_req zone=frontend burst=24;
        proxy_pass  http://keycloak:8080;
        include     includes/proxy-headers.ngx;
    }

    location ~ / {
        limit_req zone=frontend burst=24;
        try_files $uri $uri/ /index.html;
    }
   
    ssl_certificate     /etc/ssl/cert.pem;
    ssl_certificate_key /etc/ssl/key.pem;
}